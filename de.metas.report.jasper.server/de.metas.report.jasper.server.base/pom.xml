<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>de.metas.report.jasper.server</artifactId>
		<groupId>de.metas.report.jasper.server</groupId>
		<version>1.0.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>de.metas.report.jasper.server.base</artifactId>

	<properties>
		<migration-sql-basedir>42-de.metas.report.jasper.server</migration-sql-basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
		</dependency>

		<!-- 
		Adding spring-core to avoid:
java.lang.ClassNotFoundException: No ClassLoaders found for: org.springframework.core.io.Resource
        at org.jboss.mx.loading.LoadMgr3.beginLoadTask(LoadMgr3.java:212)
        at org.jboss.mx.loading.RepositoryClassLoader.loadClassImpl(RepositoryClassLoader.java:521)
        at org.jboss.mx.loading.RepositoryClassLoader.loadClass(RepositoryClassLoader.java:415)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:270)
        at net.sf.jasperreports.engine.util.JRClassLoader.loadClassForRealName(JRClassLoader.java:157)
		 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<!-- 
		Adding spring-beans to avoid:
java.lang.ClassNotFoundException: No ClassLoaders found for: org.springframework.beans.factory.ListableBeanFactory
        at org.jboss.mx.loading.LoadMgr3.beginLoadTask(LoadMgr3.java:212)
        at org.jboss.mx.loading.RepositoryClassLoader.loadClassImpl(RepositoryClassLoader.java:521)
        at org.jboss.mx.loading.RepositoryClassLoader.loadClass(RepositoryClassLoader.java:415)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:270)
        at net.sf.jasperreports.engine.util.JRClassLoader.loadClassForRealName(JRClassLoader.java:157)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-vfs2</artifactId>
			<version>2.0</version>
		</dependency>
		<!--
		This dependency is required when we choose to ge the jasper-files via http, 
		but note that this causes performance problems and even hangings of the report servlet.
		So it's generally not a good idea. 
		Instead, just configure the system to get the jasper files from the local file system		
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		-->
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>de.metas.adempiere.adempiere</groupId>
			<artifactId>de.metas.adempiere.adempiere.base</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>de.metas.report.jasper.commons</groupId>
			<artifactId>de.metas.report.jasper.commons</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.barcode4j</groupId>
			<artifactId>barcode4j-fop-ext-complete</artifactId>
			<version>2.0</version>
			<type>jar</type>
		</dependency>
		
		<!-- Q/R code-->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
		</dependency>

		<dependency>
			<groupId>ar.com.fdvs</groupId>
			<artifactId>DynamicJasper-core-fonts</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- Thx for the two fonts to http://ansuz.sooke.bc.ca/page/fonts ^^ -->
		<!-- 
			..but don't include them here, because the endcustomer project might require different fonts 
			that might none the less have the same names, in order to be pluggable. 
		<dependency>
			<groupId>jp.osdn.ocra</groupId>
			<artifactId>jp.osdn.ocra</artifactId>
		</dependency>
		<dependency>
			<groupId>jp.osdn.ocrb</groupId>
			<artifactId>jp.osdn.ocrb</artifactId>
		</dependency>
 		-->
 		
 		
 		<!-- JXls integration -->
		<dependency>
			<groupId>org.jxls</groupId>
			<artifactId>jxls</artifactId>
			<version>2.3.0</version>
			
			<exclusions>
				<exclusion>
				  <groupId>ch.qos.logback</groupId>
				  <artifactId>logback-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.jxls</groupId>
			<artifactId>jxls-poi</artifactId>
			<version>1.0.9</version>
		</dependency>
			<!-- 
			<exclusions>
				- exclude those because jasperreports already brings them -
				<exclusion>
					<groupId>org.apache.poi</groupId>
					<artifactId>poi</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.poi</groupId>
					<artifactId>poi-ooxml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		 -->
	</dependencies>

	<build>
		<finalName>adempiereJasper</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
			</plugin>
		</plugins>
	</build>

</project>
