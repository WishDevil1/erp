<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>de.metas.parent.general</artifactId>
        <groupId>de.metas</groupId>
        <version>10.0.0</version>
        <relativePath>../../parent-pom/pom.xml</relativePath>
    </parent>

    <groupId>de.metas.procurement</groupId>
    <artifactId>procurement-webui-backend</artifactId>
    <name>procurement-webui-backend</name>
    <description>Rest API for webui that is connected to metasfresh and allows the user to log report the availability of goods which he would like to sell.</description>

    <!-- FRESH-271: we need an explicit version here, otherwise versions-maven-plugin
        can't set it to another version it -->
    <version>10.0.0</version>

    <properties>
        <java.version>14</java.version>
        <maven.compiler.source>14</maven.compiler.source>
        <maven.compiler.target>14</maven.compiler.target>
        <metasfresh.version>10.0.0</metasfresh.version>
        <spring-boot.version>2.4.1</spring-boot.version>
        <cxf.version>3.4.1</cxf.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>de.metas.procurement</groupId>
            <artifactId>de.metas.procurement.sync-api</artifactId>
            <version>${metasfresh.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>javax.ws.rs-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!--		<dependency>-->
        <!--			<groupId>org.springframework.boot</groupId>-->
        <!--			<artifactId>spring-boot-starter-validation</artifactId>-->
        <!--		</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--		<dependency>-->
        <!--			<groupId>org.springframework.boot</groupId>-->
        <!--			<artifactId>spring-boot-starter-web-services</artifactId>-->
        <!--		</dependency>-->
        <!--		<dependency>-->
        <!--			<groupId>org.springframework.boot</groupId>-->
        <!--			<artifactId>spring-boot-starter-websocket</artifactId>-->
        <!--		</dependency>-->

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-management</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-jms</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.ws</groupId>
            <artifactId>jaxws-api</artifactId>
            <version>2.3.1</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter</artifactId>
                </exclusion>
            </exclusions>

        </dependency>

        <!-- Logging -->
        <!--		<dependency>-->
        <!--			<groupId>net.logstash.logback</groupId>-->
        <!--			<artifactId>logstash-logback-encoder</artifactId>-->
        <!--			<exclusions>-->
        <!--				<exclusion>-->
        <!--					<groupId>ch.qos.logback</groupId>-->
        <!--					<artifactId>logback-core</artifactId>-->
        <!--				</exclusion>-->
        <!--				<exclusion>-->
        <!--					<groupId>com.fasterxml.jackson.core</groupId>-->
        <!--					<artifactId>jackson-databind</artifactId>-->
        <!--				</exclusion>-->
        <!--			</exclusions>-->
        <!--		</dependency>-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--todo TBP: not sure if mojo versions plugin is needed-->
            <!--
            See http://www.mojohaus.org/versions-maven-plugin/examples/update-properties.html
            Note that the propery needs to be declared in the actual child poms, see http://stackoverflow.com/questions/3628471/maven-versions-plugin-not-picking-up-properties-from-parent
            -->
            <!--			<plugin>-->
            <!--				<groupId>org.codehaus.mojo</groupId>-->
            <!--				<artifactId>versions-maven-plugin</artifactId>-->
            <!--				<version>2.8.1</version>-->
            <!--				<configuration>-->
            <!--					<properties>-->
            <!--						<property>-->
            <!--							<name>metasfresh.version</name>-->
            <!--							<searchReactor>false</searchReactor>-->
            <!--							<autoLinkDependencies>true</autoLinkDependencies>-->
            <!--						</property>-->
            <!--					</properties>-->
            <!--				</configuration>-->
            <!--			</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>14</source>
                    <target>14</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <rules>
                        <!-- task 08834: We shall not leave the decision about plugin-versions
                            to maven. Rationale: we had the case that a build stopped working at a *very*
                            critical moment, because maven picked a more recent version of the jaxb plugin.
                            That version didn't support the way, we configured it and failed with an
                            error message. This shall not happen again. -->
                        <requirePluginVersions>
                            <message>!! We need to have the plugin version under control to
                                avoid build failures due to maven releasing a new plugin version
                                !!
                            </message>
                            <banLatest>true</banLatest>
                            <banRelease>true</banRelease>
                            <banSnapshots>true</banSnapshots>
                            <phases>clean,deploy,site</phases>
                            <additionalPlugins>
                                <additionalPlugin>org.apache.maven.plugins:maven-reactor-plugin</additionalPlugin>
                            </additionalPlugins>
                            <unCheckedPluginList>org.apache.maven.plugins:maven-enforcer-plugin,org.apache.maven.plugins:maven-eclipse-plugin</unCheckedPluginList>
                        </requirePluginVersions>

                        <!-- See http://maven.apache.org/enforcer/enforcer-rules/dependencyConvergence.html -->
                        <dependencyConvergence/>

                        <!-- if you want to avoid duplicate class names in your dependency tree, then good luck with vaadin ;-)  -->
                        <banDuplicateClasses>
                            <ignoreClasses>
                                <ignoreClass>com.google.*</ignoreClass>
                                <ignoreClass>com.vaadin.*</ignoreClass>
                                <ignoreClass>elemental.*</ignoreClass>
                                <ignoreClass>javax.activation.*</ignoreClass>
                                <ignoreClass>javax.annotation.*</ignoreClass>
                                <ignoreClass>javax.el.*</ignoreClass>
                                <ignoreClass>javax.persistence.*</ignoreClass>
                                <ignoreClass>javax.servlet.*</ignoreClass>
                                <ignoreClass>javax.transaction.*</ignoreClass>
                                <ignoreClass>javax.xml.*</ignoreClass>
                                <ignoreClass>org.apache.commons.*</ignoreClass>
                                <ignoreClass>org.apache.juli.*</ignoreClass>
                                <ignoreClass>org.mozilla.*</ignoreClass>
                            </ignoreClasses>
                            <findAllDuplicates>true</findAllDuplicates>
                        </banDuplicateClasses>
                    </rules>
                </configuration>
            </plugin>


        </plugins>
    </build>

</project>
