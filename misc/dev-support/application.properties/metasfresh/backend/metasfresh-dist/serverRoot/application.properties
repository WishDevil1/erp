#
# these properties are sortof common default settings
#
spring.application.name=app
spring.application.title=metasfresh backend service
server.port=8282

# --------------------------------------------------------------------------------
# Elasticsearch
# for more properties, see https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-connecting-to-elasticsearch-rest
# --------------------------------------------------------------------------------
# Elasticsearch cluster name.
spring.data.elasticsearch.cluster-name=metasfresh
spring.elasticsearch.rest.uris=http://localhost:9200
spring.elasticsearch.rest.read-timeout=10s

# NOTE: Avoid spamming the console in case there is no connection to elasticsearch. Those "Connection refused" are logged as INFO
logging.level.org.elasticsearch.client.transport=WARN


#
# these properties are local to my dev environment
#
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#
# metasfreh-admin
#
# only try registering once a minutespring.data.elasticsearch.cluster-nodes=localhost:9201, because metasfresh-admin might not be running anyways
spring.boot.admin.period=60000
# don't log a warning if registration fails, in order not to pollute the log output in case metasfresh-admin is not running
logging.level.de.codecentric.boot.admin.services.ApplicationRegistrator=INFO
#spring.boot.admin.url=http://localhost:9090
spring.boot.admin.client.prefer-ip=true

#
# Logging
#
#Temporary debug settings, to figure out what's wrong with the communication between metasfresh soap servers (e.g. MSV3)
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.ws.client.MessageTracing.sent=DEBUG
#logging.level.org.springframework.ws.server.MessageTracing.sent=DEBUG
#logging.level.org.springframework.ws.client.MessageTracing.received=TRACE
#logging.level.org.springframework.ws.server.MessageTracing.received=TRACE
