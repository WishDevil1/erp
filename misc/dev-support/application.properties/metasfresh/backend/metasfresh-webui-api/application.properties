# --------------------------------------------------------------------------------
# Build info
# --------------------------------------------------------------------------------
info.build.ciBuildNo=@env.BUILD_NUMBER@
info.build.ciBuildTag=@env.BUILD_TAG@
info.build.ciBuildUrl=@env.BUILD_URL@
info.build.ciJobName=@env.JOB_NAME@
info.build.ciGitSHA1=@env.BUILD_GIT_SHA1@

spring.application.name=webapi
spring.application.title=metasfresh WebUI API service

#
# Logging
#

logging.level.springfox = WARN
logging.level.de.metas.ui.web.session.WebRestApiContextProvider = INFO
#logging.level.de.metas.ui.web.session.UserSession = TRACE
logging.level.de.metas.ui.web.window = INFO
logging.level.de.metas.ui.web.window.WindowConstants.logger = INFO
logging.level.de.metas.ui.web.window.controller.Execution = INFO
#
# Callouts
logging.level.org.adempiere.ad.callout.api.impl.CalloutExecutor = INFO
#
# Notifications & EventBus
logging.level.de.metas.ui.web.websocket = INFO
logging.level.de.metas.ui.web.notification = INFO
logging.level.de.metas.event = INFO
#
# Processes
logging.level.de.metas.ui.web.process.ProcessInstance = INFO

#
# User session 
#
# Session timeout in seconds
# See https://github.com/metasfresh/metasfresh-webui-api/issues/770
server.session.timeout=7200

#
# Error handling
#
# see org.springframework.boot.autoconfigure.web.ErrorProperties.IncludeStacktrace
server.error.include-stacktrace=always

#
# HTTP
#
spring.http.multipart.max-file-size=100Mb
spring.http.multipart.max-request-size=100Mb

#
# Debugging
#
metasfresh.webui.debug.showColumnNamesForCaption=false

#
# metasfreh-admin
#
# only try registering once a minute, because metasfresh-admin might not be running anyways
spring.boot.admin.period=60000
# don't log a warning if registration fails, in order not to pollute the log output in case metasfresh-admin is not running
logging.level.de.codecentric.boot.admin.services.ApplicationRegistrator=INFO


# --------------------------------------------------------------------------------
# Elasticsearch
# for more properties, see https://github.com/spring-projects/spring-boot/blob/v1.4.1.RELEASE/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/data/elasticsearch/ElasticsearchProperties.java
# --------------------------------------------------------------------------------
# Elasticsearch cluster name.
spring.data.elasticsearch.cluster-name=metasfresh
#spring.data.elasticsearch.repositories.enabled=true
# NOTE: Avoid spamming the console in case there is no connection to elasticsearch. Those "Connection refused" are logged as INFO
logging.level.org.elasticsearch.client.transport=WARN

#
# these properties are local to my dev environment
#
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#spring.boot.admin.url=http://localhost:9090

management.security.enabled=false
spring.boot.admin.client.prefer-ip=true

spring.data.elasticsearch.cluster-nodes=localhost:9201
#spring.data.elasticsearch.cluster-nodes=192.168.99.100:30071
