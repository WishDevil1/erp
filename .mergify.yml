queue_rules:
  - name: default
    conditions:
      - check-success=testspace-analytics
      - check-success=continuous-integration/jenkins/branch

pull_request_rules:
  - name: When a project-PR is integrated, create a PR towards the master-branch
    conditions:
      - merged
      - or: &PROJECTBRANCHES # look 'ma, i'm doing https://docs.mergify.com/configuration/#yaml-anchors-and-aliases !
        - base=adorable_badger_uat
        - base=big_coconut_uat
        - base=hard_encoded_uat 
        - base=holy_cow_uat
        - base=inner_silence_uat
        - base=intensive_care_uat
        - base=mad_orange_uat
        - base=neon_underwear_uat
        - base=release
        - base=tasty_ham_uat
        - base=tenacious_d_uat
        - base=week_end_uat
        - base=yoyo_uat
    actions:
      copy:
        branches:
          - master
        labels:  
          - "ops:merge_towards_master"

  - name: When a project- or master-PR is integrated, add a label with the name of the branch
    conditions:
      - merged
      - or: &BASEBRANCHES # this rule should apply to both the project-branches from above, and master
        - or: *PROJECTBRANCHES
        - or:
          - base=master
    actions:
      label:
        add:
          - "branch:{{base}}"

  - name: Automatic squash-merge successful PRs into the base-branch
    conditions:
      - check-success=testspace-analytics
      - check-success=continuous-integration/jenkins/branch
      - or: *BASEBRANCHES
      - or:
        - "#approved-reviews-by>=1"
        - label=ops:without_review_approval
    actions:
      queue:
        name: default
        method: squash

  - name: Automatic merge PRs labeled with `ops:merge_towards_master` into the `master`-branch
    conditions:
      - check-success=testspace-analytics
      - check-success=continuous-integration/jenkins/branch
      - base=master
      - label=ops:merge_towards_master
    actions:
      queue:
        name: default
        method: merge
