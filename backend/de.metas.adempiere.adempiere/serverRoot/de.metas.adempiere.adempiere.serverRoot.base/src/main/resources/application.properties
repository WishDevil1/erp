#
# use this port on order to not collide with the ports of other metasfresh services that might run in the same box
# also note that this is the port that we have to app in the default docker-compose.yml
server.port=8282

# --------------------------------------------------------------------------------
# Build info
# --------------------------------------------------------------------------------
info.build.ciBuildNo=@env.BUILD_NUMBER@
info.build.ciBuildTag=@env.BUILD_TAG@
info.build.ciBuildUrl=@env.BUILD_URL@
info.build.ciJobName=@env.JOB_NAME@

spring.application.name=metasfresh-app
spring.application.title=metasfresh backend service

#
# metasfreh-admin
#
# only try registering once a minute, because metasfresh-admin might not be running anyways
spring.boot.admin.period=60000

# don't log a warning if registration fails, in order not to pollute the log output in case metasfresh-admin is not running
logging.level.de.codecentric.boot.admin.services.ApplicationRegistrator=ERROR

#
# Logging
#

# logstash; see https://github.com/metasfresh/metasfresh/issues/1504
# This application sends log events to logstash, if enabled via this property. 
# Not enabled by default, because it needs some infrastruction (i.e. an ELK stack) to work. If that infrastructure is in place, use it to enable this feature via command line param or centralized config.
# If you are a dev and need a local ELK stack to benefit from logstash, take a look at https://github.com/metasfresh/metasfresh-dev/tree/master/vagrant
# Note that the application won't hang or crash if logstash is not avaiable or too slow.
logstash.enabled=false
logstash.host=localhost
logstash.port=5000

logging.level.root=INFO

logging.level.de.metas=WARN
logging.level.org.adempiere=WARN
logging.level.org.compiere=WARN
logging.level.org.eevolution=WARN

logging.level.org.adempiere.ad.housekeeping=INFO
